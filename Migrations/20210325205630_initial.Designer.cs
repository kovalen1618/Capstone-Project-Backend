// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using playlist_app_backend.Entities;

namespace playlist_app_backend.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20210325205630_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("playlist_app_backend.Entities.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("playlist");
                });

            modelBuilder.Entity("playlist_app_backend.Entities.Models.PlaylistTag", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PlaylistId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PlaylistTag");
                });

            modelBuilder.Entity("playlist_app_backend.Entities.Models.QuoteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Font")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.ToTable("quoteItem");
                });

            modelBuilder.Entity("playlist_app_backend.Entities.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tag");
                });

            modelBuilder.Entity("playlist_app_backend.Entities.Models.PlaylistTag", b =>
                {
                    b.HasOne("playlist_app_backend.Entities.Models.Playlist", "Playlist")
                        .WithMany("PlaylistTags")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("playlist_app_backend.Entities.Models.Tag", "Tag")
                        .WithMany("PlaylistTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("playlist_app_backend.Entities.Models.QuoteItem", b =>
                {
                    b.HasOne("playlist_app_backend.Entities.Models.Playlist", "Playlist")
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
